/* 
 * Copyright (C) 2017 ESDC/ESA 2017
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package esavo.vospec.main;

import java.awt.*;
import java.util.List;
import java.util.ListIterator;
import java.util.Vector;
import javax.swing.*;
import javax.swing.event.*;



/**
 *
 * @author  ibarbarisi
 */
public class VOEspaceWin extends javax.swing.JDialog {
    
    
    public List list;
    public DefaultListModel listModel;
    public VOSpecDetached VOSPEC;
    
    
    /** Creates new form VOEspaceWin */
    public VOEspaceWin() {
        initComponents();
    }
   

    public VOEspaceWin(List list) {
        this();
        this.list = list;
        addList();
        this.setTitle("VOEspace Browser");
    }
    
    public void setAioSpecToolDetached(VOSpecDetached vospec){
        this.VOSPEC = vospec;
    }
    
    public Icon getIcon() throws Exception{
              
//        java.net.URL url = new java.net.URL("http://"+EnvironmentDefs.SERVERHOST+":8080/vospec/esavo/vospec/images/openVOEspace.gif");
//        System.out.println("http://"+EnvironmentDefs.SERVERHOST+":8080/vospec/esavo/vospec/images/openVOEspace.gif");
        return new ImageIcon(getClass().getResource("/esavo/vospec/images/openVOEspace.gif"));
    }
    
    private void exitItemActionPerformed(java.awt.event.ActionEvent evt) {                                         
        dispose();
    } 
    
    public void addList() {
        
        try{
            ListIterator li = list.listIterator();
            Vector listVector = new Vector();
            while (li.hasNext()) {
                listVector.add(new Value(li.next().toString(), getIcon()));
            }
            
            jList1 = new JList(listVector);
            jList1.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
            jList1.setLayoutOrientation(JList.VERTICAL_WRAP);
            jList1.setVisibleRowCount(-1);
            jList1.setCellRenderer(new SimpleCellRenderer());
            jList1.addListSelectionListener(new MyListSelectionListener());
            jScrollPane1.setViewportView(jList1);
            
        }catch(Exception e){
            e.printStackTrace();
        }
 
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Open");
        setName("OpenFrame");
        jPanel1.setPreferredSize(new java.awt.Dimension(265, 45));
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Look In:");

        jComboBox1.setForeground(new java.awt.Color(102, 102, 102));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "http://satss01.esac.esa.int:8080/voespace-1.0/services/VOSpaceService" }));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 373, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel4.setLayout(new java.awt.BorderLayout(5, 0));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 200));
        jScrollPane1.setRequestFocusEnabled(false);
        jList1.setFont(new java.awt.Font("Dialog", 0, 12));
        jList1.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList1.setMaximumSize(null);
        jList1.setMinimumSize(null);
        jList1.setPreferredSize(null);
        jList1.setVisibleRowCount(-1);
        jScrollPane1.setViewportView(jList1);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        jButton1.setForeground(new java.awt.Color(102, 102, 102));
        jButton1.setText("Open");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setForeground(new java.awt.Color(102, 102, 102));
        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(319, Short.MAX_VALUE)
                .add(jButton1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton2)
                .add(29, 29, 29))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton2)
                    .add(jButton1))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        VOSPEC.setVOEspaceFileName("");
        VOSPEC.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();    
        VOSPEC.openVOEspaceFiles();
         VOSPEC.setVisible(true);
            
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VOEspaceWin().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    public class Value {
        
        String value;
        Icon image;
        
        public Value(String value, Icon image) {
            this.value = value;
            this.image = image;
        }
        
        public String getLabel(){
            return this.value;
        }
        
    }
    
    class SimpleCellRenderer extends JLabel implements ListCellRenderer {
        public SimpleCellRenderer() {
            setOpaque(true);
        }
        
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            Value val = (Value)value;
            setText(val.value);
            setIcon(val.image);
            setBackground(isSelected ? Color.magenta : Color.white);
            setForeground(isSelected ? Color.white : Color.gray);
            return this;
        }
    }
    
    class MyListSelectionListener implements ListSelectionListener {
        // This method is called each time the user changes the set of selected items
        public void valueChanged(ListSelectionEvent evt) {
            // When the user release the mouse button and completes the selection,
            // getValueIsAdjusting() becomes false
            if (!evt.getValueIsAdjusting()) {
                JList list = (JList)evt.getSource();
    
                // Get all selected items
                Object[] selected = list.getSelectedValues();
                Vector selectedValues = new Vector();
                // Iterate all selected items
                for (int i=0; i<selected.length; i++) {
                    Value sel = (Value)selected[i];
                    selectedValues.add(sel.getLabel());
                    System.out.println("Selection "+sel.getLabel());
                }
                VOSPEC.setVOEspaceList(selectedValues);
            }
        }
    }
}



