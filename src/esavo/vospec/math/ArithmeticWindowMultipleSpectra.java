/* 
 * Copyright (C) 2017 ESDC/ESA 2017
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package esavo.vospec.math;

import esavo.vospec.main.VOSpecDetached;
import esavo.vospec.spectrum.*;
import java.awt.event.*;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.*;
import javax.swing.text.*;


/**
 *
 * @author  ibarbarisi
 */
public class ArithmeticWindowMultipleSpectra extends javax.swing.JFrame {
    
    /** Creates new form ArithmeticWindowMultipleSpectra */
    public ArithmeticWindowMultipleSpectra() {
        initComponents();
        
        
        //checkNode = new CheckNode("Arithmetics Operations");
        
        firstOperator.addMouseListener( new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if ( SwingUtilities.isLeftMouseButton(e) ) {
                    try {
                        int offset = firstOperator.viewToModel( e.getPoint() );
                        int start = Utilities.getRowStart(firstOperator, offset);
                        int end = Utilities.getRowEnd(firstOperator, offset);
                        String word = firstOperator.getDocument().getText(start, end-start);
                        setWord(word);
                        System.out.println( "Selected word: " + word );
                        int rowStart = Utilities.getRowStart(firstOperator, offset);
                        int rowEnd = Utilities.getRowEnd(firstOperator, offset);
                        firstOperator.select(rowStart, rowEnd);
                    } catch (Exception e2) {}
                }
            }
        });
        
        
        secondOperator.addMouseListener( new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if ( SwingUtilities.isLeftMouseButton(e) ) {
                    try {
                        int offset = firstOperator.viewToModel( e.getPoint() );
                        int start = Utilities.getRowStart(firstOperator, offset);
                        int end = Utilities.getRowEnd(firstOperator, offset);
                        String word2 = secondOperator.getDocument().getText(start, end-start);
                        setWord2(word2);
                        System.out.println( "Selected word2: " + word2 );
                        int rowStart = Utilities.getRowStart(firstOperator, offset);
                        int rowEnd = Utilities.getRowEnd(firstOperator, offset);
                        secondOperator.select(rowStart, rowEnd);
                    } catch (Exception e2) {}
                }
            }
        });
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        firstOperator = new javax.swing.JTextArea();
        secondOperator = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(375, 775));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(153, 153, 153)));
        jPanel2.setRequestFocusEnabled(false);
        jButton5.setForeground(new java.awt.Color(102, 102, 102));
        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton3.setForeground(new java.awt.Color(102, 102, 102));
        jButton3.setText("% Divide");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setForeground(new java.awt.Color(102, 102, 102));
        jButton2.setText("- Subtract");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setForeground(new java.awt.Color(102, 102, 102));
        jButton1.setText("+ Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setForeground(new java.awt.Color(102, 102, 102));
        jButton4.setText("x Multiply");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setForeground(new java.awt.Color(102, 102, 102));
        jButton6.setText("Convolution");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jButton6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jButton5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(61, 61, 61)
                .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(187, Short.MAX_VALUE))
        );
        jPanel3.add(jPanel2, java.awt.BorderLayout.EAST);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Spectra selected", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10), new java.awt.Color(153, 153, 153))));
        jPanel1.setPreferredSize(new java.awt.Dimension(256, 831));
        firstOperator.setColumns(20);
        firstOperator.setFont(new java.awt.Font("SansSerif", 0, 10));
        firstOperator.setForeground(new java.awt.Color(102, 102, 102));
        firstOperator.setRows(5);
        firstOperator.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "First Operator", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10), new java.awt.Color(102, 102, 102)));
        firstOperator.setPreferredSize(new java.awt.Dimension(190, 250));
        jPanel1.add(firstOperator, java.awt.BorderLayout.NORTH);

        secondOperator.setColumns(20);
        secondOperator.setFont(new java.awt.Font("SansSerif", 0, 10));
        secondOperator.setForeground(new java.awt.Color(102, 102, 102));
        secondOperator.setRows(5);
        secondOperator.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Second Operator", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10), new java.awt.Color(102, 102, 102)));
        secondOperator.setPreferredSize(new java.awt.Dimension(190, 250));
        jPanel1.add(secondOperator, java.awt.BorderLayout.SOUTH);

        jPanel3.add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setForeground(new java.awt.Color(102, 102, 102));
        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu3.setForeground(new java.awt.Color(102, 102, 102));
        jMenu3.setText("Help");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 544, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 536, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed
            
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try{
            String word = (String) getWord();
            String word2 = (String) getWord2();
            setUnits();
            
            Spectrum spectrumModified = new Spectrum();
            Spectrum orig1 =(Spectrum)hashTable.get(word);
            Spectrum orig2 =(Spectrum)hashTable2.get(word2);
            
            Spectrum spec = (new SpectrumConverter()).convertSpectrum(orig1,finalUnits);
            Spectrum spec2 = (new SpectrumConverter()).convertSpectrum(orig2,finalUnits);
            
            
           
                       
//            DiscreteConvolution discConv = new DiscreteConvolution(spec, spec2);
//            spectrumModified = discConv.getConvolution();
            
            
            
            DiscreteConvolution discConv = new DiscreteConvolution();
            spectrumModified = discConv.runningConvolution(spec, spec2);
                
            
            spectrumModified.setTitle(orig1.getTitle()+" CONVOLUTION "+orig2.getTitle());
            spectrumModified.setFormat(orig1.getFormat());
            spectrumModified.setFluxColumnName(orig1.getFluxColumnName());
            spectrumModified.setWaveLengthColumnName(orig1.getWaveLengthColumnName());
            spectrumModified.setMetaDataComplete(orig1.getMetaData());
            spectrumModified.setUnits(finalUnits);
            
            SpectrumSet spectrumSetTmp = new SpectrumSet();
            spectrumSetTmp.addSpectrum(0,spectrumModified);
            
            //add to the previous spectrumSet a new Spectrum trasformed
            this.aioSpecToolDetached.spectrumSet.addSpectrumSet(spectrumSetTmp);
            spectrumModified.setRow(this.aioSpecToolDetached.spectrumSet.getSpectrumSet().size() - 1);
                        
            this.aioSpecToolDetached.addSpectrum("CONVOLUTION", spectrumModified,(javax.swing.JTextArea) null/*,checkNode*/);
        }catch(Exception e){
            
        }
        
//        JOptionPane.showMessageDialog(this, "Still on working..");
        return;
    }//GEN-LAST:event_jButton6ActionPerformed
    public String getWord(){
        return this.word;
    }
    
    public void setWord(String word){
        this.word=word;
    }
    
    public String getWord2(){
        return this.word2;
    }
    
    public void setWord2(String word2){
        this.word2=word2;
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
            String word = (String) getWord();
            String word2 = (String) getWord2();
            setUnits();
            
            Spectrum spectrumModified = new Spectrum();
            Spectrum orig1 =(Spectrum)hashTable.get(word);
            Spectrum orig2 =(Spectrum)hashTable2.get(word2);
            
            Spectrum spec = (new SpectrumConverter()).convertSpectrum(orig1,finalUnits);
            Spectrum spec2 = (new SpectrumConverter()).convertSpectrum(orig2,finalUnits);
            Arithmetics arithmetics = new Arithmetics(spec, spec2);
            arithmetics.initializeData();
            spectrumModified = arithmetics.prod();
            
            spectrumModified.setTitle(orig1.getTitle()+" MULTIPLY "+orig2.getTitle());
            spectrumModified.setFormat(orig1.getFormat());
            spectrumModified.setFluxColumnName(orig1.getFluxColumnName());
            spectrumModified.setWaveLengthColumnName(orig1.getWaveLengthColumnName());
            spectrumModified.setMetaDataComplete(orig1.getMetaData());
            spectrumModified.setUnits(finalUnits);
            
            SpectrumSet spectrumSetTmp = new SpectrumSet();
            spectrumSetTmp.addSpectrum(0,spectrumModified);
            
            //add to the previous spectrumSet a new Spectrum trasformed
            this.aioSpecToolDetached.spectrumSet.addSpectrumSet(spectrumSetTmp);
            spectrumModified.setRow(this.aioSpecToolDetached.spectrumSet.getSpectrumSet().size() - 1);
            
            this.aioSpecToolDetached.addSpectrum("MULTIPLY", spectrumModified,(javax.swing.JTextArea) null/*,checkNode*/);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    public void setUnits(){
        this.waveUnits =(String)this.aioSpecToolDetached.waveChoice.getSelectedItem();
        this.fluxUnits =(String)this.aioSpecToolDetached.fluxChoice.getSelectedItem();
        this.finalUnits     = new Unit(waveUnits,fluxUnits);
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            String word = (String) getWord();
            String word2 = (String) getWord2();
            setUnits();
            
            Spectrum spectrumModified = new Spectrum();
            Spectrum orig1 =(Spectrum)hashTable.get(word);
            Spectrum orig2 =(Spectrum)hashTable2.get(word2);
            
            Spectrum spec = (new SpectrumConverter()).convertSpectrum(orig1,finalUnits);
            Spectrum spec2 = (new SpectrumConverter()).convertSpectrum(orig2,finalUnits);
            
            Arithmetics arithmetics = new Arithmetics(spec, spec2);
            arithmetics.initializeData();
            spectrumModified = arithmetics.sum();
            
            spectrumModified.setTitle(orig1.getTitle()+" ADD "+orig2.getTitle());
            spectrumModified.setFormat(orig1.getFormat());
            spectrumModified.setFluxColumnName(orig1.getFluxColumnName());
            spectrumModified.setWaveLengthColumnName(orig1.getWaveLengthColumnName());
            spectrumModified.setMetaDataComplete(orig1.getMetaData());
            spectrumModified.setUnits(finalUnits);
            
            SpectrumSet spectrumSetTmp = new SpectrumSet();
            spectrumSetTmp.addSpectrum(0,spectrumModified);
            
            //add to the previous spectrumSet a new Spectrum trasformed
            this.aioSpecToolDetached.spectrumSet.addSpectrumSet(spectrumSetTmp);
            spectrumModified.setRow(this.aioSpecToolDetached.spectrumSet.getSpectrumSet().size() - 1);
            
            this.aioSpecToolDetached.addSpectrum("ADD", spectrumModified,(javax.swing.JTextArea) null/*,checkNode*/);
        }catch(Exception e){
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            String word = (String) getWord();
            String word2 = (String) getWord2();
            setUnits();
            
            Spectrum spectrumModified = new Spectrum();
            Spectrum orig1 =(Spectrum)hashTable.get(word);
            Spectrum orig2 =(Spectrum)hashTable2.get(word2);
            
            Spectrum spec = (new SpectrumConverter()).convertSpectrum(orig1,finalUnits);
            Spectrum spec2 = (new SpectrumConverter()).convertSpectrum(orig2,finalUnits);
            Arithmetics arithmetics = new Arithmetics(spec, spec2);
            arithmetics.initializeData();
            spectrumModified = arithmetics.diff();
            
            spectrumModified.setTitle(orig1.getTitle()+" DIFF "+orig2.getTitle());
            spectrumModified.setFormat(orig1.getFormat());
            spectrumModified.setFluxColumnName(orig1.getFluxColumnName());
            spectrumModified.setWaveLengthColumnName(orig1.getWaveLengthColumnName());
            spectrumModified.setMetaDataComplete(orig1.getMetaData());
            spectrumModified.setUnits(finalUnits);
            
            SpectrumSet spectrumSetTmp = new SpectrumSet();
            spectrumSetTmp.addSpectrum(0,spectrumModified);
            
            //add to the previous spectrumSet a new Spectrum trasformed
            this.aioSpecToolDetached.spectrumSet.addSpectrumSet(spectrumSetTmp);
            spectrumModified.setRow(this.aioSpecToolDetached.spectrumSet.getSpectrumSet().size() - 1);
            
            this.aioSpecToolDetached.addSpectrum("DIFF", spectrumModified,(javax.swing.JTextArea) null/*,checkNode*/);
        }catch(Exception e){
            
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
            String word = (String) getWord();
            String word2 = (String) getWord2();
            setUnits();
            
            Spectrum spectrumModified = new Spectrum();
            Spectrum orig1 =(Spectrum)hashTable.get(word);
            Spectrum orig2 =(Spectrum)hashTable2.get(word2);
            
            Spectrum spec = (new SpectrumConverter()).convertSpectrum(orig1,finalUnits);
            Spectrum spec2 = (new SpectrumConverter()).convertSpectrum(orig2,finalUnits);
            Arithmetics arithmetics = new Arithmetics(spec, spec2);
            arithmetics.initializeData();
            spectrumModified = arithmetics.div();
            
            spectrumModified.setTitle(orig1.getTitle()+" DIV "+orig2.getTitle());
            spectrumModified.setFormat(orig1.getFormat());
            spectrumModified.setFluxColumnName(orig1.getFluxColumnName());
            spectrumModified.setWaveLengthColumnName(orig1.getWaveLengthColumnName());
            spectrumModified.setMetaDataComplete(orig1.getMetaData());
            spectrumModified.setUnits(finalUnits);
            
            SpectrumSet spectrumSetTmp = new SpectrumSet();
            spectrumSetTmp.addSpectrum(0,spectrumModified);
            
            //add to the previous spectrumSet a new Spectrum trasformed
            this.aioSpecToolDetached.spectrumSet.addSpectrumSet(spectrumSetTmp);
            spectrumModified.setRow(this.aioSpecToolDetached.spectrumSet.getSpectrumSet().size() - 1);
            
            this.aioSpecToolDetached.addSpectrum("DIV", spectrumModified,(javax.swing.JTextArea) null/*,checkNode*/);
        }catch(Exception e){
            
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ArithmeticWindowMultipleSpectra().setVisible(true);
            }
        });
    }
    
    public void drawSpectraSelected(){
        hashTable = new Hashtable();
        hashTable2 = new Hashtable();
        
        System.out.println("spectraVector.size "+this.spectraVector.size());
        
        for (int i=0;i<this.spectraVector.size();i++){
            Spectrum spec = new Spectrum();
            
            spec = (Spectrum) spectraVector.elementAt(i);
            System.out.println("spec.getUrl() "+spec.getUrl());
            
            firstOperator.append(spec.getUrl());
            firstOperator.append("\n");
            hashTable.put(spec.getUrl(),spec);
            
            secondOperator.append(spec.getUrl());
            secondOperator.append("\n");
            hashTable2.put(spec.getUrl(),spec);
        }
    }
    
    public void setSpectraVector(Vector spectraVector){
        this.spectraVector = spectraVector;
    }
    
    public void setAioSpecToolDetached(VOSpecDetached aioSpecToolDetached) {
        this.aioSpecToolDetached = aioSpecToolDetached;
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea firstOperator;
    public javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JTextArea secondOperator;
    // End of variables declaration//GEN-END:variables
    
    public String                   word;
    public String                   word2;
    public Hashtable                hashTable;
    public Hashtable                hashTable2;
    
    public VOSpecDetached      aioSpecToolDetached 	= null;
    public Vector                   spectraVector = new Vector();
    //public CheckNode checkNode = null;
    public String waveUnits = "";
    public String fluxUnits = "";
    public Unit finalUnits;
    
    
}
